from Crypto.Util.number import getPrime, bytes_to_long, long_to_bytes
from pubcrypt.number.util import *
from pubcrypt.scheme import pkcs
from pubcrypt.modules import rsa
import os

"""

n = 4644510497445144618249449567509171767753881728682751101570495069661344864645944748167232306034593397802696254868915103866773939628326869905219356352696730184685650228291369844700969260528186367790865911951135890699568424379914831745507790143136652871335292382561479307862326639369373048387401195280205106809599524548339220981834906849270934247500731153161729685541225190970384767906175053425628899070394236591182859174410630589416906706747767335383850695243876286113086710492418549456037905543666153384925941921713068479832688837530701056861307448512634059235721360099775404074539157003066718234435258068479910702663
e = 65537
d = 1258979339718220152634412188028143437358251200238782265276101208668901407150696682045117749007500369439627980648279244094072646558390326744681963861721735992354556606277311828297186610819586353110528906202785130510670812809698139767748689929243368452313524713920452262144654664516180359256636437953413243243813524566075680395450887036525676130966227971315645684306402012198191508629862339665951929105134959950873436945411044318214170654426164059580053010468999083601802896552892525381429887388238030028146802817443415737036112441518591354874526159903432660490482272012436767995340323211824967399924361611710917353033

m = b"cypher{flag_de_test_pkcs}"
c = pkcs.pkcs_encrypt(m, e, n)
print (c)
m = pkcs.pkcs_decrypt(c, d, n)

print (long_to_bytes(m)) 

"""
n, e, d = rsa.generate(2048)

print (f"n = {n}")
print (f"e = {e}")
print (f"d = {d}")


flag = b"cypher{flag_de_test}"
c = rsa.encrypt(bytes_to_long(flag), e, n)
m = rsa.decrypt(c, d, n)

print (long_to_bytes(m)) 
